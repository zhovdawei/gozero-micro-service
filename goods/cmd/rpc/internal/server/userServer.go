// Code generated by goctl. DO NOT EDIT!
// Source: goods.proto

package server

import (
	"context"

	"github.com/zhovdawei/gozero-micro-service/goods/cmd/rpc/internal/logic"
	"github.com/zhovdawei/gozero-micro-service/goods/cmd/rpc/internal/svc"
	"github.com/zhovdawei/gozero-micro-service/goods/cmd/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) QueryGoodsList(ctx context.Context, in *pb.QueryGoodsListReq) (*pb.GoodsResp, error) {
	l := logic.NewQueryGoodsListLogic(ctx, s.svcCtx)
	return l.QueryGoodsList(in)
}

func (s *UserServer) QueryGoodsAttrs(ctx context.Context, in *pb.QueryGoodsAttrsReq) (*pb.GoodsAttrsResp, error) {
	l := logic.NewQueryGoodsAttrsLogic(ctx, s.svcCtx)
	return l.QueryGoodsAttrs(in)
}

func (s *UserServer) QueryGoodsDetail(ctx context.Context, in *pb.QueryGoodsDetailReq) (*pb.GoodsDetailResp, error) {
	l := logic.NewQueryGoodsDetailLogic(ctx, s.svcCtx)
	return l.QueryGoodsDetail(in)
}

func (s *UserServer) QueryGoodsSpecById(ctx context.Context, in *pb.QueryGoodsSpecByIdReq) (*pb.GoodsSpecVO, error) {
	l := logic.NewQueryGoodsSpecByIdLogic(ctx, s.svcCtx)
	return l.QueryGoodsSpecById(in)
}

func (s *UserServer) QueryGoodsSpecs(ctx context.Context, in *pb.QueryGoodsSpecsReq) (*pb.GoodsSpecsResp, error) {
	l := logic.NewQueryGoodsSpecsLogic(ctx, s.svcCtx)
	return l.QueryGoodsSpecs(in)
}

func (s *UserServer) QueryGoodsSpecBySpec(ctx context.Context, in *pb.QueryGoodsSpecBySpecReq) (*pb.GoodsSpecVO, error) {
	l := logic.NewQueryGoodsSpecBySpecLogic(ctx, s.svcCtx)
	return l.QueryGoodsSpecBySpec(in)
}
