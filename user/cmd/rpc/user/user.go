// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"

	"github.com/zhovdawei/gozero-micro-service/user/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	QueryUserByIdReq         = pb.QueryUserByIdReq
	QueryUserPostByUserIdReq = pb.QueryUserPostByUserIdReq
	QueryUserPostReq         = pb.QueryUserPostReq
	UserPostArrayResp        = pb.UserPostArrayResp
	UserPostResp             = pb.UserPostResp
	UserResp                 = pb.UserResp

	User interface {
		QueryUser(ctx context.Context, in *QueryUserByIdReq, opts ...grpc.CallOption) (*UserResp, error)
		QueryUserPostArray(ctx context.Context, in *QueryUserPostByUserIdReq, opts ...grpc.CallOption) (*UserPostArrayResp, error)
		QueryUserPost(ctx context.Context, in *QueryUserPostReq, opts ...grpc.CallOption) (*UserPostResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) QueryUser(ctx context.Context, in *QueryUserByIdReq, opts ...grpc.CallOption) (*UserResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.QueryUser(ctx, in, opts...)
}

func (m *defaultUser) QueryUserPostArray(ctx context.Context, in *QueryUserPostByUserIdReq, opts ...grpc.CallOption) (*UserPostArrayResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.QueryUserPostArray(ctx, in, opts...)
}

func (m *defaultUser) QueryUserPost(ctx context.Context, in *QueryUserPostReq, opts ...grpc.CallOption) (*UserPostResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.QueryUserPost(ctx, in, opts...)
}
