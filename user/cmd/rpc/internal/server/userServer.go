// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"github.com/zhovdawei/gozero-micro-service/user/cmd/rpc/internal/logic"
	"github.com/zhovdawei/gozero-micro-service/user/cmd/rpc/internal/svc"
	"github.com/zhovdawei/gozero-micro-service/user/cmd/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) QueryUser(ctx context.Context, in *pb.QueryUserByIdReq) (*pb.UserResp, error) {
	l := logic.NewQueryUserLogic(ctx, s.svcCtx)
	return l.QueryUser(in)
}

func (s *UserServer) QueryUserPostArray(ctx context.Context, in *pb.QueryUserPostByUserIdReq) (*pb.UserPostArrayResp, error) {
	l := logic.NewQueryUserPostArrayLogic(ctx, s.svcCtx)
	return l.QueryUserPostArray(in)
}

func (s *UserServer) QueryUserPost(ctx context.Context, in *pb.QueryUserPostReq) (*pb.UserPostResp, error) {
	l := logic.NewQueryUserPostLogic(ctx, s.svcCtx)
	return l.QueryUserPost(in)
}

func (s *UserServer) QueryUserByPhone(ctx context.Context, in *pb.GetUserByPhone) (*pb.UserResp, error) {
	l := logic.NewQueryUserByPhoneLogic(ctx, s.svcCtx)
	return l.QueryUserByPhone(in)
}
